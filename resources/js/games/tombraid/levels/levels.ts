// Legenda
// X = solid block all sides
// S = player start position
// . = empty space
// C = cannon
// T = Text (sample)

export const getLevelMap = (id: number) => levels[id];

export const getCoinMap = (id: number) => coins[id];

export const getTextMap = (id: number) => textMap[id];

// export const getBlockMap = (id: number) => blocks[id];

// type BlockKey = 'x' | 'y';

// interface Blocks {
//     [key: BlockKey]: Block[][];
// }

// const blocks: Blocks = [];

const textMap: Record<number, {}> = {};

interface Coins {
    [key: number]: number[][];
}

const coins: Coins = {
    1: [[], [1, 2, 3], [1], [2, 3]],
    3: [[], [1, 2, 3], [], [1, 2, 3], [1], [1, 2, 3]],
    2: [[], [], [4, 5, 6, 7, 8, 9], [4, 5, 6, 7, 8, 9]],
    4: [[]],
};

const levelText = {
    3: 'Text Example!',
};

const levels: Levels = {
    1: [
        ['X', 'X', 'X', 'X', 'X'],
        ['X', '.', '.', '.', 'X'],
        ['X', '.', 'S', '.', 'X'],
        ['X', '.', '.', '.', 'X'],
        ['X', 'X', 'X', 'X', 'X'],
    ],
    2: [
        ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'],
        ['X', '.', 'X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X'],
        ['X', '.', '.', 'S', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X'],
        ['X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X'],
        ['X', 'C', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X'],
        ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'],
    ],
    3: [
        ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'],
        ['X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X'],
        ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', '.', 'X'],
        ['X', '.', '.', '.', '.', 'T', 'T', 'T', 'T', '.', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', '.', '.', '.', 'X'],
        ['X', 'S', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'],
        ['X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X'],
        ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', '.', 'X'],
        ['X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X'],
        ['X', '.', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'],
        ['X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X'],
        ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', '.', 'X'],
        ['X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X'],
        ['X', '.', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'],
        ['X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X'],
        ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', '.', 'X'],
        ['X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X'],
        ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'],
    ],
    4: [['X', 'S']],
};

for (let i = 5; i < 26; i++) levels[i] = [['S']];
