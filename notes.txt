1. Create a container that can make any object be an individual object that you can (slowly) move around.
2. https://stackoverflow.com/questions/9882284/looping-through-array-and-removing-items-without-breaking-for-loop
3. clamp side for squares (takes off 10% of the sides, else chance reasonable the square will never be visible)
4. github settings, apply permissions on main branch (no direct commits) and other authentication options for teammembers
5. namechange transformedview => tv (folder)
6. getEmptyX or Y = not functioning properly if border is absent;
7. ElementsDrawn fix;
8. levelBlocks (ie. text, which character);
9. cleanup branch locally (and check remote vs local);
10. github settings for project (auth / permissions);
11. Entity colors optional, convert partial sketch to default or required sketch for engine draw
12. Phaser linear implementation in Engine, find better place?, implement cubic bezier add to to percentage(linear)
13. Input add-and remove listeners with generic using type as index, need unique keys for index per index type
14. Generic sketch create with color hardcoded (?) in, preferably with generic color aswell, but this seems to be quite hard to do.
15. Use consistent TODO's:
    -// TODO::Add to log system
17. EngineRender.ts: move commented
18. Next in getVisual should be optional and only set if post function is available
19. LevelOffset is floating point, collision checks integer will not work;



// Notes on sun @forum, 18-08-2024+:
// 1. Generalize Types for all kinds of shapes and make shapes and methods for tv and static shows equal
// 2. Seperate calculated and arbitrary properties on button and if possible abstract all the methods and apply them to all the shapes (see 1)
// 3. Auto-update all objects that are given an (optional) calculated properties object in case of resize
// 4. Set a sort of scale value for x and y-window , like 16:9 (think tiles), set this default and calculate all calculated objects with these values;
// 5. TV needs seperate objects for Methods, Paint and Properties (like in types)
// 6. Give Statistics a permanent place in (1) TV;
// 7. F11 functionality in input and dualView should be optional or not present at all (not really important);
// 8. Dualview should work with a preset dynamic width and height and encapsulated;
// 9. Cleanup local branches, make CL macro
// 10. Cleanup comments.ts (this one aswell)
// 11. Create overview of updates / shows / any 'alive' objects / active listeners ea.

// Menu, buttons:
// 1. start
// 2. settings
// 3. exit
// 4. admin options
// 5. show statistics
// 6. level editor
// 7. login
// 8. create account
// 9. load game
// 10. save game
// 11. title tab change on routechange
// 12.

// 1. make all button properties optional
// 2. onhover:  -color (fill / stroke)
//              -size (scale out/in)
//              -dropShadow
// 3. onClick:  -loadAnimation
//              -dissapear / appear effects (slide / fade)
// 4. make button object dynamic for property changes for button methods (point 2 and 3)
